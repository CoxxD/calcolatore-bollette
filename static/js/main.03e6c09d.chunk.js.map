{"version":3,"sources":["components/accordion-wrapper/accordion-wrapper.component.jsx","components/custom-date/custom-date.component.jsx","components/custom-input/custom-numeric-input/custom-numeric-input.component.jsx","components/dettaglio-costi/dettaglio-costi.component.jsx","components/custom-input/custom-input-text/custom-input-text.component.jsx","components/inquilino-item/inquilino-item.component.jsx","components/inquilini-collection/inquilini-collection.component.jsx","components/dettaglio-inquilini/dettaglio-inquilini.component.jsx","utils/bolletta.utils.js","pages/homepage/homepage.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["AccordionWrapper","children","isExpanded","title","otherProps","handleChange","Accordion","className","expanded","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","CustomDate","label","TextField","type","onChange","event","value","target","Date","InputLabelProps","shrink","CustomNumericInput","isPrice","FormControl","fullWidth","InputLabel","htmlFor","Input","startAdornment","InputAdornment","position","DettaglioCosti","handleChanges","useState","costiFissi","costiConsumo","costiAggiuntivi","fromDate","toDate","values","setValues","useEffect","handleChangeInput","prop","emitChangeValue","handleChangeDate","date","CustomInputText","placeholder","InquilinoItem","inquilino","showtrash","removeInquilinoHandler","editable","format","multiple","giorniInCasaPicker","maxDate","giorniInCasaConverted","map","year","month","index","day","getTime","quotaDaPagare","toFixed","onClick","InquiliniCollection","inquilini","List","dense","ListItem","button","ListItemAvatar","Avatar","alt","src","length","EMPTY_INQUILINO","nome","DettaglioInquilini","bolletta","setInquilini","indexInquilini","setIndexInquilini","updateQuoteInquilini","inquiliniParam","allDaysFromInquilini","forEach","push","ricorrenzeGiornateInCasa","concat","apply","reduce","a","b","undefined","times","costoFissoToAdd","costoAggiuntivoToAdd","costoConsumoGiornaliero","countDaysBolletta","costoConsumoRimanenzeCasaVuota","Object","keys","quotaVariabile","giornoInCasa","getNewInquiliniWithAmountUpdated","updateInquiliniArray","updateInquilinoGiorni","typeInput","filter","Button","variant","color","startIcon","newInquilinoIndex","newInquilino","Homepage","accordionHandler","panel","isNewCostiOpened","isNewInquiliniOpened","state","isCostiOpened","isInquiliniOpened","setState","bollettaChangeHandler","Math","round","abs","isBollettaValid","isBollettaValidControl","Number","isValidDate","isNaN","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03e6c09d.chunk.js","sourcesContent":["import React from 'react';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport './accordion-wrapper.styles.scss';\n\nconst AccordionWrapper = ({ children, isExpanded, title, handleChange, ...otherProps }) => (\n  <Accordion\n    className='accordion'\n    expanded={isExpanded}\n    {...otherProps}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className='title-accordion'>{title}</Typography>\n      </AccordionSummary>\n\n    <AccordionDetails>\n      {children}\n    </AccordionDetails>\n  </Accordion>\n);\n\nexport default AccordionWrapper;","import React from 'react';\n\nimport './custom-date.styles.scss';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst CustomDate = ({ label, handleChange, ...otherProps }) => {\n\n  const handleChangeDate = (event) => {\n    const value = event.target.value;\n    handleChange(new Date(value));\n  }\n\n  return (\n    <TextField\n      {...otherProps}\n      label={label}\n      type=\"date\"\n      className='date-input'\n      onChange={handleChangeDate}\n      InputLabelProps={{\n        shrink: true\n      }}\n    />\n  );\n}\n\nexport default CustomDate;","import React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst CustomNumericInput = ({ title, handleChange, isPrice, ...otherProps }) => (\n  <FormControl fullWidth className='form-control'>\n    {\n      title ? (<InputLabel htmlFor=\"standard-adornment-amount\">{title}</InputLabel>) : null\n    }\n    <Input\n      {...otherProps}\n      type='number'\n      onChange={handleChange}\n      startAdornment={\n        isPrice ?\n        (<InputAdornment position=\"start\">€</InputAdornment>)\n        : null\n      }\n    />\n  </FormControl>\n);\n\nexport default CustomNumericInput;","import React, { useState, useEffect } from 'react';\n\nimport './dettaglio-costi.styles.scss';\n\nimport CustomDate from '../custom-date/custom-date.component';\nimport CustomNumericInput from '../custom-input/custom-numeric-input/custom-numeric-input.component';\n\nconst DettaglioCosti = ({ handleChanges }) => {\n\n  const [values, setValues] = useState({\n    costiFissi: 0,\n    costiConsumo: 0,\n    costiAggiuntivi: 0,\n    fromDate: '',\n    toDate: ''\n  });\n\n  useEffect(() => {\n    if (values) {\n      handleChanges(values);\n    }\n  }, [values]);\n\n  const handleChangeInput = (prop) => (event) => {\n    emitChangeValue(prop, event.target.value);\n  };\n\n  const handleChangeDate = (prop) => (event) => {\n    emitChangeValue(prop, event);\n  };\n\n  const emitChangeValue = (prop, event) => {\n    setValues({ ...values, [prop]: event });\n  }\n\n  return (\n    <div className='dettaglio-costi-container'>\n      <div className='section'>\n        <div className='input-container'>\n          <CustomNumericInput id='costiFissi' isPrice={true} handleChange={handleChangeInput('costiFissi')} title='Costi fissi' value={values.costiFissi} />\n        </div>\n        <div className='input-container'>\n          <CustomNumericInput id='costiConsumo' isPrice={true} handleChange={handleChangeInput('costiConsumo')} title='Costi consumo' value={values.costiConsumo} />\n        </div>\n        <div className='input-container'>\n          <CustomNumericInput id='costiAggiuntivi' isPrice={true} handleChange={handleChangeInput('costiAggiuntivi')} title='Costi aggiuntivi' value={values.costiAggiuntivi} />\n        </div>\n      </div>\n      <div className='section date'>\n        <div className='date-container'>\n          <CustomDate\n            label='Data Inizio'\n            id=\"fromDate\"\n            handleChange={(date) => handleChangeDate('fromDate')(date)} />\n        </div>\n        <div className='date-container'>\n          <CustomDate\n            label='Data Fine'\n            id=\"toDate\"\n            handleChange={(date) => handleChangeDate('toDate')(date)} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DettaglioCosti;","import React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\n\nconst CustomInputText = ({ title, handleChange, ...otherProps }) => (\n  <FormControl fullWidth className='form-control'>\n    <Input\n      {...otherProps}\n      type='text'\n      placeholder='Inserisci nome...'\n      onChange={handleChange}\n    />\n  </FormControl>\n);\n\nexport default CustomInputText;","import React from 'react';\n\nimport './inquilino-item.styles.scss';\n\nimport CustomInputText from '../custom-input/custom-input-text/custom-input-text.component';\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport DatePicker from \"react-multi-date-picker\";\n\nconst InquilinoItem = ({ inquilino, handleChangeInput, showtrash, removeInquilinoHandler }) => {\n\n  const updateDate = (event) => {\n    const giorniInCasaConverted = event.map(date => new Date(date.year, date.month.index, date.day, 0, 0, 0, 0).getTime())\n    handleChangeInput(inquilino.id, 'giorni')({ giorniInCasaPicker: event, giorniInCasaConverted });\n  }\n\n  return (\n    <div className='inquilino-item'>\n      <div className='input-container'>\n        <CustomInputText id={`name_input_${inquilino.id + 1}`} handleChange={handleChangeInput(inquilino.id, 'name')} />\n      </div>\n      <div className='input-container'>\n        <DatePicker\n          editable={true}\n          format='DD/MM/YYYY'\n          multiple={true}\n          value={inquilino.giorniInCasaPicker}\n          maxDate={new Date()}\n          onChange={updateDate}>\n        </DatePicker>\n      </div>\n      <div className='input-container'>\n        <div className='value'>{inquilino.quotaDaPagare.toFixed(2)} €</div>\n      </div>\n      <div className='actions-container'>\n        {\n          showtrash ?\n            (\n              <DeleteForeverIcon\n                className='trash-icon'\n                onClick={() => removeInquilinoHandler(inquilino.id)} />\n            ) : null\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default InquilinoItem;","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport InquilinoItem from '../inquilino-item/inquilino-item.component';\n\nimport './inquilini-collection.styles.scss';\n\nconst InquiliniCollection = ({ inquilini, handleChangeInput, removeInquilinoHandler }) => {\n\n  return (\n    <div className='inquilini-collection-container'>\n      <List dense className='list'>\n        {inquilini.map((inquilino) => {\n          return (\n            <ListItem key={inquilino.id} button>\n              <ListItemAvatar>\n                <Avatar\n                  alt={`Avatar n°${inquilino.id + 1}`}\n                  src={`https://robohash.org/${inquilino.id}?set=set2&size=180x180`}\n                />\n              </ListItemAvatar>\n              <InquilinoItem\n                inquilino={inquilino}\n                handleChangeInput={handleChangeInput}\n                showtrash={inquilini.length > 1}\n                removeInquilinoHandler={removeInquilinoHandler} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  )\n}\n\nexport default InquiliniCollection;","import React, { useState, useEffect } from 'react';\n\nimport './dettaglio-inquilini.styles.scss';\n\nimport InquiliniCollection from '../inquilini-collection/inquilini-collection.component';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Button from '@material-ui/core/Button';\nimport { getNewInquiliniWithAmountUpdated } from '../../utils/bolletta.utils';\n\nconst EMPTY_INQUILINO = {\n  id: 0,\n  nome: '',\n  giorniInCasaConverted: [],\n  giorniInCasaPicker: [],\n  quotaDaPagare: 0\n}\n\nconst DettaglioInquilini = ({ bolletta }) => {\n\n  const [inquilini, setInquilini] = useState([{\n    id: 0,\n    nome: '',\n    giorniInCasaConverted: [],\n    giorniInCasaPicker: [],\n    quotaDaPagare: 0\n  }]);\n  const [indexInquilini, setIndexInquilini] = useState(0);\n\n  useEffect(() => {\n    if (bolletta) {\n      updateQuoteInquilini(inquilini);\n    }\n  }, [bolletta]);\n\n  const updateQuoteInquilini = (inquiliniParam) => {\n    setInquilini(getNewInquiliniWithAmountUpdated(inquiliniParam, bolletta));\n  }\n\n  const handleChangeInput = (id, typeInput) => (event) => {\n    if (typeInput === 'giorni') {\n      updateInquilinoGiorni(id, event.giorniInCasaConverted, event.giorniInCasaPicker);\n    } else if (typeInput === 'name') {\n      updateInquiliniArray(id, 'name', event.target.value);\n    }\n  };\n\n  const updateInquiliniArray = (id, prop, value) => {\n    setInquilini(\n      inquilini.map(inquilino =>\n        inquilino.id === id ?\n          { ...inquilino, [prop]: value } :\n          inquilino\n      )\n    )\n  }\n\n  const updateInquilinoGiorni = (id, giorniInCasaConverted, giorniInCasaPicker) => {\n    updateQuoteInquilini(inquilini.map(inquilino =>\n      inquilino.id === id ?\n        { ...inquilino, giorniInCasaConverted, giorniInCasaPicker } :\n        inquilino\n    )\n    )\n  }\n\n  const addNewInquilino = () => {\n    const newInquilinoIndex = indexInquilini + 1;\n    setIndexInquilini(newInquilinoIndex);\n    const newInquilino = { ...EMPTY_INQUILINO, id: newInquilinoIndex };\n    setInquilini([...inquilini, newInquilino]);\n  }\n\n  const removeInquilino = (id) => {\n    setInquilini(inquilini.filter(inquilino => inquilino.id !== id));\n  }\n\n  return (\n    <div className='dettaglio-inquilini-container'>\n      <InquiliniCollection\n        inquilini={inquilini}\n        handleChangeInput={handleChangeInput}\n        removeInquilinoHandler={removeInquilino}\n      />\n      <div className='footer'>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          className='add-new-inquilino-btn'\n          startIcon={<AddCircleOutlineIcon />}\n          onClick={addNewInquilino}\n        >\n          Aggiungi\n      </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default DettaglioInquilini;","export const getNewInquiliniWithAmountUpdated = (inquiliniParam, bolletta) => {\n  let allDaysFromInquilini = []\n  inquiliniParam.forEach(inquilino => allDaysFromInquilini.push(inquilino.giorniInCasaConverted))\n  allDaysFromInquilini = [].concat.apply([], allDaysFromInquilini)\n\n  var ricorrenzeGiornateInCasa = allDaysFromInquilini.reduce((a, b) => {\n    var exists = a[b] !== undefined;\n    return !exists ? (a[b] = { times: 1 }) : (a[b].times = a[b].times + 1), a\n  }, {});\n\n  const costoFissoToAdd = bolletta.costiFissi / inquiliniParam.length;\n  const costoAggiuntivoToAdd = bolletta.costiAggiuntivi / inquiliniParam.length;\n\n  const costoConsumoGiornaliero = bolletta.costiConsumo / bolletta.countDaysBolletta;\n\n  const costoConsumoRimanenzeCasaVuota = (costoConsumoGiornaliero * (bolletta.countDaysBolletta - Object.keys(ricorrenzeGiornateInCasa).length)) / inquiliniParam.length;\n\n  const newInquiliniWithAmountUpdated = inquiliniParam.map(inquilino => {\n    let quotaVariabile = 0;\n    inquilino.giorniInCasaConverted.forEach(giornoInCasa => {\n      quotaVariabile += costoConsumoGiornaliero / ricorrenzeGiornateInCasa[giornoInCasa].times;\n    });\n    inquilino.quotaDaPagare = quotaVariabile + costoFissoToAdd + costoAggiuntivoToAdd + costoConsumoRimanenzeCasaVuota;\n    return inquilino;\n  });\n\n  return newInquiliniWithAmountUpdated;\n}","import React from 'react';\n\nimport './homepage.styles.scss';\n\n// Import components\nimport AccordionWrapper from '../../components/accordion-wrapper/accordion-wrapper.component';\nimport DettaglioCosti from '../../components/dettaglio-costi/dettaglio-costi.component';\nimport DettaglioInquilini from '../../components/dettaglio-inquilini/dettaglio-inquilini.component';\n\nconst ONE_DAY = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\nclass Homepage extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isCostiOpened: false,\n      isInquiliniOpened: false,\n      bolletta: null,\n      isBollettaValid: false\n    }\n  }\n\n  accordionHandler = (panel) => {\n    let isNewCostiOpened = false;\n    let isNewInquiliniOpened = false;\n\n    if (panel === 'bolletta') {\n      if (!this.state.isCostiOpened) {\n        isNewCostiOpened = true;\n        isNewInquiliniOpened = false;\n      } else {\n        isNewCostiOpened = false;\n        isNewInquiliniOpened = false;\n      }\n    } else if (panel === 'inquilini') {\n      if (!this.state.isInquiliniOpened) {\n        isNewCostiOpened = false;\n        isNewInquiliniOpened = true;\n      } else {\n        isNewCostiOpened = false;\n        isNewInquiliniOpened = false;\n      }\n    }\n\n    this.setState({ isCostiOpened: isNewCostiOpened, isInquiliniOpened: isNewInquiliniOpened });\n  }\n\n  bollettaChangeHandler = ({ costiFissi, costiConsumo, costiAggiuntivi = 0, fromDate, toDate }) => {\n\n    let countDaysBolletta = 0;\n    if (fromDate && toDate) {\n      countDaysBolletta = Math.round(Math.abs((toDate - fromDate) / ONE_DAY)) + 1;\n    }\n    this.setState({\n      bolletta: { costiFissi, costiConsumo, costiAggiuntivi, fromDate, toDate, countDaysBolletta },\n      isBollettaValid: this.isBollettaValidControl(costiFissi, costiConsumo, fromDate, toDate)\n    })\n  }\n\n  isBollettaValidControl = (costiFissi, costiConsumo, fromDate, toDate) => {\n    const result = Number(costiFissi) > 0 && Number(costiConsumo) > 0 && this.isValidDate(fromDate) && this.isValidDate(toDate);\n    return result;\n  }\n\n  isValidDate = (date) => {\n    return date instanceof Date && !isNaN(date)\n  }\n\n  render() {\n\n    const { isCostiOpened, isInquiliniOpened, isBollettaValid, bolletta } = this.state;\n\n    return (\n      <div className='homepage-container'>\n        <div className='title-container'>CALCOLA BOLLETTA</div>\n        {/* Accordion bolletta */}\n        <div className='accordion-container'>\n          <AccordionWrapper title='Dettaglio Bolletta' isExpanded={isCostiOpened} onChange={() => this.accordionHandler('bolletta')}>\n            <DettaglioCosti\n              handleChanges={this.bollettaChangeHandler}\n            />\n          </AccordionWrapper>\n        </div>\n        {\n          isBollettaValid ?\n            (\n              <div className='accordion-container'>\n                <AccordionWrapper title='Dettaglio Inquilini' isExpanded={isInquiliniOpened} onChange={() => this.accordionHandler('inquilini')}>\n                  <DettaglioInquilini bolletta={bolletta} />\n                </AccordionWrapper>\n              </div>\n            ) : null\n        }\n      </div>\n    )\n  }\n}\n\nexport default Homepage;","import './App.css';\n\nimport Homepage from './pages/homepage/homepage.component';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}